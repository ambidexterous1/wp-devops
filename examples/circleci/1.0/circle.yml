#
# circle.yaml
#
#   For www.example.org
#
machine:
  timezone:
    America/New_York

#  php:
#    version: 7.0.20

  hosts:
    example.test: 127.0.0.1
    www.example.test: 127.0.0.1

  environment:

    #
    # Define the Deployment provider
    # Currently pantheon or wpengine
    #
    DEPLOY_PROVIDER:  "wpengine"

    #
    # Determine where to deploy on deployment,sh. If each of
    # your environments are on a different GIT repo then you
    # would use "master" here, which is how WPEngine would work.
    # If OTOH you have a deployment environment that works on
    # a per branch basis them you would put "${CIRCLE_BRANCH}"
    # here. This is how it would work for Pantheon except that
    # Pantheon's `test` and `live` do not work that way.
    #
    DEPLOY_BRANCH: "${CIRCLE_BRANCH}"

    DEPLOY_CORE_PATH:     ""
    DEPLOY_CONTENT_PATH:  "wp-content"
    DEPLOY_PORT:          ""

    #
    # Define the domain to use for testing
    #
    TEST_DOMAIN:    "example.test"
    TEST_WEBSERVER: "apache"
    TEST_DBSERVER:  "mysql"

    #
    # If the test server is MySQL version >= 5.7 and the
    # sql/provision.sql is <= 5.6 this needs to be "yes"
    # We had this with WPEngine (5.6) and CircleCI (5.7)
    #
    FIX_MYSQL56_COMPATIBILITY: "yes"

    #
    # The database credentials for WordPress on CircleCI
    #
    DB_HOST:        127.0.0.1
    DB_NAME:        wordpress
    DB_USER:        wordpress
    DB_PASSWORD:    wordpress

    #
    # The version of PHP defined above
    #
    PHP_VERSION:    "$(phpenv global)"

    #
    # The root for this repo in CircleCI
    #
    SOURCE_REPO_ROOT:   "${HOME}/${CIRCLE_PROJECT_REPONAME}"

    #
    # The roots for the various WordPress source in Git repo
    #
    SOURCE_ROOT:    "${SOURCE_REPO_ROOT}/www"
    SOURCE_INDEX:   "${SOURCE_ROOT}"
    SOURCE_CONTENT: "${SOURCE_INDEX}/content"
    SOURCE_CORE:    "${SOURCE_INDEX}/wp"

    #
    # The roots for all the devops related files and code
    #
    DEVOPS_ROOT:        "${SOURCE_REPO_ROOT}/devops"
    DEVOPS_CORE_ROOT:   "${DEVOPS_ROOT}/core"
    SHARED_ROOT:        "${DEVOPS_CORE_ROOT}/shared"
    SHARED_SOURCE:      "${SHARED_ROOT}/scripts.sh"
    INCLUDES_ROOT:      "${DEVOPS_CORE_ROOT}/includes"
    FILES_ROOT:         "${DEVOPS_CORE_ROOT}/files"
    HOSTS_ROOT:         "${DEVOPS_CORE_ROOT}/hosts"
    PROVIDERS_ROOT:     "${DEVOPS_CORE_ROOT}/providers"
    SERVERS_ROOT:       "${DEVOPS_CORE_ROOT}/servers"

    #
    # The place to store logs
    #
    LOGS_ROOT:   "/var/www/logs"

    #
    # The root of the web server on CircleCI
    #
    DOCUMENT_ROOT:  "/var/www/html"

    #
    # The roots for the varius WordPress source on CircleCI server
    #
    TEST_INDEX:         "${DOCUMENT_ROOT}"
    TEST_CORE:          "${TEST_INDEX}"
    TEST_CONTENT_PATH:  "wp-content"
    TEST_CONTENT:       "${TEST_INDEX}/${TEST_CONTENT_PATH}"

    #
    # File-related variables
    #
    USR_BIN_ROOT:   "/usr/local/bin"

    #
    # Apache ServerName and ServerAlias to configure
    #
    SERVER_NAME:    "${TEST_DOMAIN}.test"
    SERVER_ALIAS:   "www.${TEST_DOMAIN}.test"

    #
    # Define the production user and repo for cloning
    #
    TARGET_GIT_USER:  "git"
    TARGET_GIT_PORT:  "2222"
    TARGET_GIT_REPO:  "git.wpengine.com:production/${CIRCLE_PROJECT_REPONAME}.git"
    TARGET_GIT_URL:   "${TARGET_GIT_USER}@${TARGET_GIT_REPO}"

    GIT_USER_EMAIL: "team@wplib.org"
    BUILD_TAG:      "build-${CIRCLE_BUILD_NUM}"

    #
    # Define WP-CLI constants
    #
    WP_CLI_SOURCE:    "${FILES_ROOT}/wp-cli-1.3.0.phar"
    WP_CLI_FILEPATH:  "${USR_BIN_ROOT}/wp"

    #
    # Define .GITIGNORE constants
    #
    GITIGNORE_SOURCE:    "${PROVIDERS_ROOT}/${DEPLOY_PROVIDER}/gitignore.txt"
    GITIGNORE_FILEPATH:  "${TEST_INDEX}/.gitignore"

    #
    # Define the files that are unncessary and will be deleted from deployment
    #
    # @todo Deal with wp-config.php in a better way later
    #
    FILES_TO_DELETE: |
        ${TEST_INDEX}/readme.html
        ${TEST_INDEX}/license.txt
        ${TEST_INDEX}/composer.json
        ${TEST_INDEX}/wp-config.php
        ${TEST_INDEX}/wp-config-sample.php
        ${TEST_CONTENT}/plugins/hello.php
        ${TEST_CONTENT}/themes/twentyseventeen

#checkout:

dependencies:
  cache_directories:
    #
    # Cache the Composer cache.
    # @see: https://discuss.circleci.com/t/caching-composer-dependencies/1215
    #
    - ~/.composer/cache

    #
    # www/* is relative to build directory
    #
    - www/vendor                           # Needed for Composer accept existing plugins, etc
    - www/wp                               # WordPress rarely changes
    - www/content/plugins                  # 3rd party plugins rarely change
    - www/content/mu-plugins               # 3rd party plugins rarely change
    - www/content/themes/twentyseventeen   # The default theme rarely ever changes
    - www/content/uploads                  # Images and other uploads rarely if ever change

  override:
    #
    #  Configure Ubuntu, Fixup Git Source repo, Configure Web Server, Install WP CLI and run Composer.
    #
    - devops/core/dependencies.sh

database:
  override:
    #
    # Configure DB server, create database, add user and permissions then import provision.sql database.
    #
    - devops/core/database.sh

compile:
  override:
    #
    # Restructure from the GitHub repo to a form that webhost wants.
    #
    - devops/core/compile.sh

test:
  override:
    - echo 'No tests, just say us Okay!'

deployment:

  deploy:
    branch: /.+/
    commands:
    - devops/core/deployment.sh

